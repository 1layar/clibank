package main

import (
	"fmt"
	"os"

	"github.com/ALTA-BE7-I-Kadek-Adi-Gunawan/clibank/app"
	"github.com/ALTA-BE7-I-Kadek-Adi-Gunawan/clibank/platform"
	"github.com/spf13/cobra"

	// docs is generated by Swag CLI, you have to import it.
	_ "github.com/ALTA-BE7-I-Kadek-Adi-Gunawan/clibank/docs"
)

var (
	cliBank *app.Application
	isInit  bool
)

var rootCmd = &cobra.Command{
	Use:   "clibank",
	Short: "A brief description of your application",
	Long:  `A longer description that spans multiple lines and likely contains`,
	Run: func(cmd *cobra.Command, args []string) {
		if !isInit {
			os.Exit(1)
		}
		cliBank.Run("help")
	},
}

var serverCmd = &cobra.Command{
	Use:   "server",
	Short: "Run server",
	Long:  `Run server`,
	Run: func(cmd *cobra.Command, args []string) {
		if !isInit {
			os.Exit(1)
		}
		cliBank.Run("server")
	},
}

var cliCmd = &cobra.Command{
	Use:   "cli",
	Short: "Run cli",
	Long:  `Run via cli`,
	Run: func(cmd *cobra.Command, args []string) {
		if !isInit {
			os.Exit(1)
		}
		for cliBank.GetChoice() != 0 {
			cliBank.Run("cli")
			cliBank.ShowMenu()
		}
	},
}

func init() {
	config := new(platform.Configuration)
	db := new(platform.Database)

	defer func() {
		if r := recover(); r != nil {
			fmt.Println("Failed to setup app")
			fmt.Println("Please check your config file")
			fmt.Println("Error:", r)
		}
	}()

	config.InitConfiguration()
	db.Connect(config.DatabaseUrl)
	db.Migrate()
	cliBank = new(app.Application)
	cliBank.Init(db, config)
	isInit = true
}

// @title CliBank API
// @version 1.0
// @description This is a clibank api server doc.
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host 192.168.1.7:8000
// @BasePath /api/v1
func main() {
	rootCmd.AddCommand(serverCmd)
	rootCmd.AddCommand(cliCmd)
	if err := rootCmd.Execute(); err != nil {
		fmt.Println(err)
		os.Exit(1)
	}
}
