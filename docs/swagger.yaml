basePath: /api/v1
definitions:
  responses.AccountResponse:
    properties:
      created_at:
        type: string
      name:
        description: ID          uint           `json:"id"`
        type: string
      updated_at:
        type: string
      wallet:
        $ref: '#/definitions/responses.WalletResponse'
        description: PhoneNumber string         `json:"phone_number"`
    type: object
  responses.ApiResponse:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      status_code:
        type: integer
    type: object
  responses.UserApiResponse:
    properties:
      data:
        $ref: '#/definitions/responses.UserResponse'
      message:
        type: string
      status_code:
        type: integer
    type: object
  responses.UserResponse:
    properties:
      account:
        $ref: '#/definitions/responses.AccountResponse'
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      phone_number:
        type: string
      updated_at:
        type: string
    type: object
  responses.UsersApiResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/responses.UserResponse'
        type: array
      message:
        type: string
      status_code:
        type: integer
    type: object
  responses.WalletResponse:
    properties:
      balance:
        description: ID        uint    `json:"id"`
        type: number
      created_at:
        type: string
      currency:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  users.CreateUserDto:
    properties:
      confirm_pin:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      pin:
        type: string
    type: object
  users.UpdateUserDto:
    properties:
      name:
        type: string
      pin:
        type: string
    type: object
host: 192.168.1.7:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a clibank api server doc.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: CliBank API
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: show all users with wallet
      operationId: get-users
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/responses.UsersApiResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/responses.ApiResponse'
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: add a new user
      operationId: create-users
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/users.CreateUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserApiResponse'
        "400":
          description: Not valid data
          schema:
            $ref: '#/definitions/responses.ApiResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/responses.ApiResponse'
      summary: Add a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: delete string by ID
      operationId: delete-users
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/responses.UsersApiResponse'
        "500":
          description: Server Error
          schema:
            $ref: '#/definitions/responses.ApiResponse'
      summary: delete user by id
      tags:
      - users
    get:
      consumes:
      - application/json
      description: get string by ID
      operationId: get-user
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserApiResponse'
        "402":
          description: Server Error
          schema:
            $ref: '#/definitions/responses.ApiResponse'
        "404":
          description: Server Error
          schema:
            $ref: '#/definitions/responses.ApiResponse'
      summary: get user by it id
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update string by ID
      operationId: update-user
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/users.UpdateUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserApiResponse'
        "402":
          description: Server Error
          schema:
            $ref: '#/definitions/responses.ApiResponse'
        "404":
          description: Server Error
          schema:
            $ref: '#/definitions/responses.ApiResponse'
      summary: Update user By ID
      tags:
      - users
swagger: "2.0"
